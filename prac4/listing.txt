  LL1 warning in IfStatement: "elseif" is the start & successor of a deletable structure
  LL1 warning in IfStatement: "else" is the start & successor of a deletable structure
  LL1 warning in ForLoopStatement: identifier is the start & successor of a deletable structure
  LL1 warning in AddExp: "+" is the start & successor of a deletable structure
  LL1 warning in AddExp: "-" is the start & successor of a deletable structure

   1   COMPILER Parva $CN
   2   /* Parva level 1 grammar  - Coco/R for Java (EBNF)
   3      P.D. Terry, Rhodes University
   4      Grammar only */
   5 
   6   CHARACTERS
   7     lf         = CHR(10) .
   8     backslash  = CHR(92) .
   9     control    = CHR(0) .. CHR(31) .
  10     letter     = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
  11                  + "abcdefghijklmnopqrstuvwxyz" .
  12     digit      = "0123456789" .
  13     stringCh   = ANY - '"' - control - backslash .
  14     charCh     = ANY - "'" - control - backslash .
  15     printable  = ANY - control .
  16 
  17   TOKENS
  18     identifier = letter { { "_" } ( letter | digit ) } .
  19     number     = digit { digit } .
  20     stringLit  = '"' { stringCh | backslash printable } '"' .
  21     charLit    = "'" ( charCh   | backslash printable ) "'" .
  22 
  23   COMMENTS FROM "//" TO lf
  24   COMMENTS FROM "/*" TO "*/"
  25   IGNORE CHR(9) .. CHR(13)
  26 
  27   PRODUCTIONS
  28     Parva             = "void" identifier "(" ")" Block .
  29     Block             = "{" { Statement } "}" .
  30     Statement         =   Block | ";"
  31                         | ConstDeclarations | VarDeclarations
  32                         | Assignment | IfStatement | WhileStatement
  33                         | ReturnStatement | HaltStatement
  34                         | ReadStatement | WriteStatement 
  35                         | DoWhileStatement | BreakStatement
  36                         | ContinueStatement | ForLoopStatement .
  37     ConstDeclarations = "const" OneConst { "," OneConst } ";" .
  38     OneConst          = identifier "=" Constant .
  39     
  40     Constant          =   number | charLit
  41                         | "true" | "false" | "null" .
  42     VarDeclarations   = Type OneVar { "," OneVar } ";" .
  43     OneVar            = identifier [ "=" Expression ] .
  44     Assignment        = Designator "=" Expression ";" .
  45     Designator        = identifier [ "[" Expression "]" ] .
  46     IfStatement       = "if" "(" Condition ")" Statement 
  47                             { "elseif" Statement }
  48                             [ "else" Statement ] .
  49     WhileStatement    = "while" "(" Condition ")" Statement .
  50     
  51 
  52     ForLoopStatement  = "for" { Expression }  Statement .
  53     DoWhileStatement  = "do" Statement
  54                           "while" "(" Condition ")" ";" .
  55     BreakStatement    = "break" ";" .
  56 
  57     ContinueStatement = "continue" ";" .
  58 
  59 
  60 
  61     ReturnStatement   = "return" ";" .
  62     HaltStatement     = "halt" ";" .
  63     ReadStatement     = "read" "(" ReadElement
  64                                    { "," ReadElement } ")" ";" .
  65     ReadElement       = stringLit | Designator .
  66     WriteStatement    = "write" "(" WriteElement
  67                                     { "," WriteElement } ")" ";" .
  68     WriteElement      = stringLit | Expression .
  69     Condition         = Expression .
  70     Expression        = AddExp [ RelOp AddExp ] .
  71     AddExp            = [ "+" | "-" ] Term { AddOp Term } .
  72     Term              = Factor { MulOp Factor } .
  73     Factor            =   Designator | Constant
  74                         | "new" BasicType "[" Expression "]"
  75                         | "!" Factor | "(" Expression ")" .
  76     Type              = BasicType [ "[]" ] .
  77     BasicType         = "int" | "bool" .
  78     AddOp             = "+" | "-" | "||" .
  79     MulOp             = "*" | "/" | "&&" .
  80     RelOp             = "==" | "!=" | "<" | "<=" | ">" | ">=" .
  81   END Parva.

0 errors detected
5 warnings detected
